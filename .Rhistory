"(D)  5", "(E)10", "(F) 6",
"(G)  3", "(H) 5", "(I)14"),
nrow=3, byrow=TRUE)
x
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E)10", "(F) 6",
"(G)  3", "(H) 5", "(I)14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
kable(x)
library(kableExtra)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E)10", "(F) 6",
"(G)  3", "(H) 5", "(I)14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
kable(x)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
kable(x)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")%>%
add_header_above(c(" " = 1, "VD" = 3)))
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")%>%
add_header_above(c(" " = 1, "VD" = 3))
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")%>%
add_header_above(c("VI" = 1, "VD" = 3))
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")%>%
add_header_above(c("VI" = 1, "VD" = 3), border_left=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, background="lightblue")%>%
add_header_above(c("VI" = 1, "VD" = 3), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue")%>%
row_spec(0, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue")%>%)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
row_spec(0, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
add_header_above(c("VI" = 1, "VD" = 3), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3",
"(D)  5", "(E) 10", "(F) 6",
"(G)  3", "(H) 5", "(I) 14"),
nrow=3, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé")
rownames(x) <- c("Faible", "Moyen", "Élevé")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
add_header_above(c("VI" = 1, "VD" = 3), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3", "19",
"(D)  5", "(E) 10", "(F) 6", "21",
"(G)  3", "(H) 5", "(I) 14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
add_header_above(c("VI" = 1, "VD" = 3), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3", "19",
"(D)  5", "(E) 10", "(F) 6", "21",
"(G)  3", "(H) 5", "(I) 14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
add_header_above(c("VI" = 1, "VD" = 3, ""), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3", "19",
"(D)  5", "(E) 10", "(F) 6", "21",
"(G)  3", "(H) 5", "(I) 14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
column_spec(5, bold=TRUE, border_left=TRUE, border_right=TRUE, background="yellow") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
row_spec(4, bold=TRUE, background="yellow") %>%
row_spec(3, extra_css = "border-bottom: 1px solid")
add_header_above(c("VI" = 1, "VD" = 3, ""), border_left=TRUE, border_right=TRUE)
row_spec(x, 2, extra_css = "border-bottom: 1px solid")
x <- matrix(c("(A) 12", "(B) 4", "(C) 3", "19",
"(D)  5", "(E) 10", "(F) 6", "21",
"(G)  3", "(H) 5", "(I) 14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
column_spec(5, bold=TRUE, border_left=TRUE, border_right=TRUE, background="yellow") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
row_spec(4, bold=TRUE, background="yellow") %>%
row_spec(3, extra_css = "border-bottom: 1px solid")
add_header_above(c("VI" = 1, "VD" = 3, ""), border_left=TRUE, border_right=TRUE)
x <- matrix(c("(A) 12", "(B) 4", "(C) 3", "19",
"(D)  5", "(E) 10", "(F) 6", "21",
"(G)  3", "(H) 5", "(I) 14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
column_spec(5, bold=TRUE, border_left=TRUE, border_right=TRUE, background="yellow") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
row_spec(4, bold=TRUE, background="yellow") %>%
row_spec(3, extra_css = "border-bottom: 1px solid") %>%
add_header_above(c("VI" = 1, "VD" = 3, ""), border_left=TRUE, border_right=TRUE)
# http://www.cookbook-r.com/Manipulating_data/Converting_between_data_frames_and_contingency_tables/
Table2Distr <- function(x) {
nm <- rownames(x)
# Convert to table
x_tab <- as.table(as.matrix(x))
# Just in case there are now rownames, required for conversion
rownames(x_tab) <- nm
# Use appropriate method to get a df
x_df <- as.data.frame(x_tab)
# Restructure df in a painful and unsightly way
#data.frame(lapply(x_df[seq_len(ncol(x_df) - 1)], function(col) {rep(col, x_df$Freq)}))
}
# Convert from data frame of counts to data frame of cases.
# `countcol` is the name of the column containing the counts
# Exemple:
# x1 <- sample(LETTERS[1:4], 200, replace=TRUE)
# x2 <- sample(letters[1:6], 300, replace=TRUE)
# po <- table(x1, x2)
# tblpo <- Table2Distr(po)
# dat <- countsToCases(tblpo, countcol="Freq")
#
countsToCases <- function(x, countcol = "Freq") {
# Get the row indices to pull from x
idx <- rep.int(seq_len(nrow(x)), x[[countcol]])
# Drop count column
x[[countcol]] <- NULL
# Get the rows from x
x[idx, ]
}
library(gmodels)
# Conversion d'un tableau en données brutes
xpand_xtab <- function(x) {
nm <- names(x)
x_tab <- as.table(as.matrix(x))
rownames(x_tab) <- nm
x_df <- as.data.frame(x_tab)
data.frame(lapply(x_df[seq_len(ncol(x_df) - 1)], function(col) {
rep(col, x_df$Freq)
}))
}
#
library(DescTools)
y <- sample(1:4, 200, replace=TRUE)
x <- sample(1:3, 200, replace=TRUE)
tbl <- table(x,y)
tbl
ConDisPairs(tbl)
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
xpand_xtab(x)
x
Table2Distr(x)
y <- Table2Distr(x)
y
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
ConDisPairs(x)
x <- matrix(c("12", "4", "3", "19",
" 5", "10", "6", "21",
" 3", "5", "14", "22",
"20", "19", "23", "62"),
nrow=4, byrow=TRUE)
colnames(x) <- c("Faible", "Moyen", "Élevé", "TotR")
rownames(x) <- c("Faible", "Moyen", "Élevé", "TotC")
x %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width=FALSE) %>%
column_spec(1, bold=TRUE, border_left=TRUE, border_right=TRUE, background="lightblue") %>%
column_spec(5, bold=TRUE, border_left=TRUE, border_right=TRUE, background="yellow") %>%
row_spec(0, bold=TRUE, background="lightblue") %>%
row_spec(4, bold=TRUE, background="yellow") %>%
row_spec(3, extra_css = "border-bottom: 1px solid") %>%
add_header_above(c("VI" = 1, "VD" = 3, ""), border_left=TRUE, border_right=TRUE)
library(bookdown)
setwd("I:/MAT104-FINAL")
render_book("index.Rmd")
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
ConDisPairs(x)
Table2Distr(x)
y <- Table2Distr(x)
y
constabl
countsToCases(x)
countsToCases
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
y <- Table2Distr(x)
dat <- countsToCases(y, countcol="Freq")
ConDisPairs(dat)
y
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
y <- Table2Distr(x)
dat <- countsToCases(y, countcol=Freq)
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
ConDisPairs(x)
library (DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
ConDisPairs(x)
z <- data.frame(x)
ConDisPairs(x)
ConDisPairs
ConDiscord <- function(x){
r_ndx = row(x)
c_ndx = col(x)
Nc <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx > c)])}, r = r_ndx, c = c_ndx))
Nd <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx < c)])}, r = r_ndx, c = c_ndx) )
Ntr <- sum(x * mapply(function(r, c){sum(x[(r_ndx == r)])}, r = r_ndx, c = c_ndx) )
Ntc <- sum(x * mapply( function(r, c){sum(x[(c_ndx == c)])},r = r_ndx, c = c_ndx) )
return(list(Nc=Nc, Nd=Nd, Ntr=Ntr, Ntc=Ntc))
}
x
ConDiscord(x)
library(DescTools)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14), nrow=3, byrow=TRUE)
GoodmanKruskalGamma(x, conf.int=0.95)
render_book("index.Rmd")
x
# library(isteahMAT104)
res <- ConDiscord(x)
ConDiscord <- function(x){
r_ndx = row(x)
c_ndx = col(x)
Nc <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx > c)])}, r = r_ndx, c = c_ndx))
Nd <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx < c)])}, r = r_ndx, c = c_ndx) )
Ntr <- sum(x * mapply(function(r, c){sum(x[(r_ndx == r)])}, r = r_ndx, c = c_ndx) )
Ntc <- sum(x * mapply( function(r, c){sum(x[(c_ndx == c)])},r = r_ndx, c = c_ndx) )
return(list(Nc=Nc, Nd=Nd, Ntr=Ntr, Ntc=Ntc))
}
```{r}
ConDiscord <- function(x){
r_ndx = row(x)
c_ndx = col(x)
Nc <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx > c)])}, r = r_ndx, c = c_ndx))
Nd <- sum(x * mapply(function(r, c){sum(x[(r_ndx > r) & (c_ndx < c)])}, r = r_ndx, c = c_ndx) )
Ntr <- sum(x * mapply(function(r, c){sum(x[(r_ndx == r)])}, r = r_ndx, c = c_ndx) )
Ntc <- sum(x * mapply( function(r, c){sum(x[(c_ndx == c)])},r = r_ndx, c = c_ndx) )
return(list(Nc=Nc, Nd=Nd, Ntr=Ntr, Ntc=Ntc))
}
# library(isteahMAT104)
res <- ConDiscord(x)
C <- res$nC
D <- res$nD
cat("Concordances = ", nC)
cat("Discordances = ", nD)
res
# library(isteahMAT104)
res <- ConDiscord(x)
C <- res$Nc
D <- res$Nd
cat("Concordances = ", C)
cat("Discordances = ", D)
library(DescTools)
"VD = Rangées:"
SomersDelta(x, direction="row", conf.level=0.95)
"VD = Colonnes:"
SomersDelta(x, direction="column", conf.level=0.95)
render_book("index.Rmd")
render_book("index.Rmd")
# library (isteahMAT104)
x <- matrix(c(12, 4, 3, 5, 10, 6, 3, 5, 14),
nrow=3, byrow=TRUE)
ConDiscord(x)
class(x)
y <- as.data.frame(x)
y
class(y)
ConDiscord(y)
is.matrix(x)
is.data.frame(y)
is.array(x)
is.table(x)
x <- table(sample(1:3, 50, replace=TRUE), sample(1:5, 50, replace=TRUE) )
ConDiscord(x)
F.Distr <- function(f, df1, df2, alpha=.05){
x <- seq(0,4,by=0.01)
y <- df(x, df1, df2)
right <- qf(1-alpha, df1, df2)
plot(x, y, type="l",
xaxt="n",ylab="Probabilité",
xlab="Rapport F",
axes=FALSE,
ylim=c(0,max(y)*1.05),
xlim=c(min(x),max(x)),
frame.plot=FALSE)
axis(1,at=c(0, round(right, 3), round(f, 3)),
pos = c(0,0),
labels=TRUE)
axis(2)
xReject <- c(seq(0,4,by=0.01))
yReject <- df(xReject, df1, df2)
yReject[xReject < right ] <- 0
polygon(c(xReject, xReject[length(xReject)], xReject[1]),
c(0, yReject , 0), col='lightblue')
p <- pf(f, df1, df2, lower.tail=FALSE)
legend("topleft", paste("p = ", round(p, 4)))
arrows(f, .15, f, 0, length=0.1, col="red", lwd=2)
text(f, 0.25, "F \n calculé", cex=1.2)
arrows(right, .35, right, 0, length=0.1, col="red", lwd=2)
text(right, 0.45, "F \n critique", cex=1.2)
}
F.Distr(3.2, 4, 15)
t.Distr <- function(t, df, alpha, h1){
t=3.1
df=25
alpha=0.05
h1=-1
x <- seq(-4,4,by=0.01)
y <- dt(x, df)
if(h1!=0){
right <- qt(1-alpha, df)
left <- qt(alpha, df)
}else{
right <- qt(1-alpha/2, df)
left <- qt(alpha/2, df)
}
plot(x, y, type="l",
xaxt="n",ylab="Probabilité",
xlab=expression(paste('Distribution des  ',(bar(X) - bar(Y)),' supposant  ', H[0],'  vraie')),
axes=FALSE,
ylim=c(0,max(y)*1.05),
xlim=c(min(x),max(x)),
frame.plot=FALSE)
axis(1,at=c(round(left, 3), 0, round(right, 3), round(t, 3)),
pos = c(0,0),
labels=TRUE)
axis(2)
xReject <- c(seq(-4,4,by=0.01))
yReject <- dt(xReject, df)
if(h1==-1){
yReject[xReject > left ] <- 0}else{
if(h1==1){yReject[xReject < right ] <- 0}else{
if(h1==0){yReject[xReject > left & xReject < right] <- 0}
}
}
polygon(c(xReject,xReject[length(xReject)],xReject[1]),
c(0, yReject , 0), col='lightblue')
if(h1!=0){
p <- pt(abs(t), df, lower.tail=FALSE)
}else{
p <- 2 * pt(abs(t), df, lower.tail=FALSE)
}
legend("topleft", paste("p = ", round(p, 4)))
arrows(t, .15, t, 0, length=0.1, col="red", lwd=2)
text(t, 0.17, "t calculé", cex=1.2)
}
t.Distr(2.24, 12, 0.05, h1="two.sided")
t.Distr <- function(t=1.96, df=15, alpha=0.05, h1=1){
x <- seq(-4,4,by=0.01)
y <- dt(x, df)
if(h1!=0){
right <- qt(1-alpha, df)
left <- qt(alpha, df)
}else{
right <- qt(1-alpha/2, df)
left <- qt(alpha/2, df)
}
plot(x, y, type="l",
xaxt="n",ylab="Probabilité",
xlab=expression(paste('Distribution des  ',(bar(X) - bar(Y)),' supposant  ', H[0],'  vraie')),
axes=FALSE,
ylim=c(0,max(y)*1.05),
xlim=c(min(x),max(x)),
frame.plot=FALSE)
axis(1,at=c(round(left, 3), 0, round(right, 3), round(t, 3)),
pos = c(0,0),
labels=TRUE)
axis(2)
xReject <- c(seq(-4,4,by=0.01))
yReject <- dt(xReject, df)
if(h1==-1){
yReject[xReject > left ] <- 0}else{
if(h1==1){yReject[xReject < right ] <- 0}else{
if(h1==0){yReject[xReject > left & xReject < right] <- 0}
}
}
polygon(c(xReject,xReject[length(xReject)],xReject[1]),
c(0, yReject , 0), col='lightblue')
if(h1!=0){
p <- pt(abs(t), df, lower.tail=FALSE)
}else{
p <- 2 * pt(abs(t), df, lower.tail=FALSE)
}
legend("topleft", paste("p = ", round(p, 4)))
arrows(t, .15, t, 0, length=0.1, col="red", lwd=2)
text(t, 0.17, "t calculé", cex=1.2)
}
t.Distr
t.Distr()
library(devtools)
setwd("I:/MAT104/isteahMAT104")
document()
rm(list = c("BlackJack", "CoinToss", "ConDiscord", "DiceRoll", "GraphDist", "HaitiPopGen", "ModeCat", "TblFreq", "TblFreq2", "exp_area", "exper", "format_cells", "n_classes", "normal_area", "permute", "polyUrn", "sim2x2", "t.Distr", "t_area", "testInt"))
document()
document()
install_github("dco61/isteahMAT104")
install_github("dco61/isteahMAT104")
library(isteahMAT104)
detach("package:isteahMAT104", unload = TRUE)
install_github("dco61/isteahMAT104")
sim2x2()
library(isteahMAT104)
