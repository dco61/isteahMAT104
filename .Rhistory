if (missing(ub)) {
ub <- max(x)
}
x2 <- seq(lb, ub, length = 100)
plot(x, dt(x, df), type = "n", ylab = "")
y <- dt(x2, df)
polygon(c(lb, x2, ub), c(0, y, 0), col = acolor)
lines(x, dt(x, df), type = "l", ...)
lines(x,rep(0,length(x)))
if(missing(ub)){
pr <- pt(lb, df, lower.tail=FALSE)
cat("pr1=",pr)
}else
if(missing(lb)){
pr <- pt(ub, df, lower.tail=TRUE)
cat("pr2=",pr)
}else
pr <- pt(ub, df) - pt(lb, df)
cat("pr3=",pr)
text(-3, 0.35, paste("p = ", round(pr, 4)), cex=1.2)
}
t_area(df=5, lb=1.96, acolor="red")
p1 <- pt(1.96, df=5, lower.tail=FALSE)
cat("Distr. Student:  P(t>1.96) = ", p1)
#' Function t_area(): draw a Student distribution with shaded area
#'
#' Arguments:
#' df: Degrees of freedom
#' lb: lower bound of the area
#' ub: upper bound of the area
#' acolor: color of the area
#' ...: additional arguments to be passed to lines function
#'
#' @example
#' t_area(df=25, lb=0, ub=1.25, acolor="red")
#' @export
#'
t_area <- function(df=25, lb, ub, acolor = "lightgray", ...) {
x <- seq(-5, 5, length = 100)
lbf <- ubf <- TRUE
if (missing(lb)) {
lbf <- FALSE
lb <- min(x)
}
if (missing(ub)) {
ubf <- FALSE
ub <- max(x)
}
x2 <- seq(lb, ub, length = 100)
plot(x, dt(x, df), type = "n", ylab = "")
y <- dt(x2, df)
polygon(c(lb, x2, ub), c(0, y, 0), col = acolor)
lines(x, dt(x, df), type = "l", ...)
lines(x,rep(0,length(x)))
if(!ubf){
pr <- pt(lb, df, lower.tail=FALSE)
cat("pr1=",pr)
}else
if(!lbf){
pr <- pt(ub, df, lower.tail=TRUE)
cat("pr2=",pr)
}else
pr <- pt(ub, df) - pt(lb, df)
cat("pr3=",pr)
text(-3, 0.35, paste("p = ", round(pr, 4)), cex=1.2)
}
t_area(df=24, ub=2.27, acolor="red")
p <- pt(2.27, 24, lower.tail=TRUE)
cat("P(t<2.27) = ", p)
t_area(df=15, lb=-1.5, ub=0.75, acolor="red")
p1 <- pt(-1.5, df=15, lower.tail=TRUE)
p2 <- pt(0.75, df=15, lower.tail=TRUE )
pr <- p2 - p1
cat("Distr. Student:  P(-1.5 < t <0.75) = ", pr)
t_area(df=5, lb=1.96, acolor="red")
p1 <- pt(1.96, df=5, lower.tail=FALSE)
cat("Distr. Student:  P(t>1.96) = ", p1)
t_area(df=Inf, ub=1.96, acolor="red")
p1 <- pt(1.96, df=Inf, lower.tail=TRUE)
cat("Distr. Student:  P(t<1.96) = ", p1)
p2 <- pnorm(1.96, lower.tail=TRUE)
cat("Distr, Normale:  P(z<1.96) = ", p2)
summary(xech)
set.seed(23434334)
subpop = subset(HaitiPop,(DEPARTEMENT==5),CondxVie)
HaitiPop <- isteahMAT104::HaitiPopGen()
set.seed(23434334)
subpop = subset(HaitiPop,(DEPARTEMENT==5),CondxVie)
xech = sample(subpop$CondxVie, 25, replace=FALSE)
mu0 = 4.7
xb = mean(xech)
cat("Moyenne = ",xb)
summary(xech)
install.packages("pastecs")
library(pastecs)
stat.desc(xech, norm=TRUE)
summary(xech)
library(psych)
describe(xech)
summary(xech)
library(psych)
desc <- describe(xech)
summary(desc)
summarize(desc)
library(psych)
desc <- describe(xech)
library(psych)
desc <- describe(xech)
desc
desc$sd
hist(xech)
t.test(xech, mu=4.7)
sem <- s1/sqrt(length(xech))
cat("Moyenne    = ", m1 <- mean(xech))
cat("Écart-type = ", s1 <- sd(xech))
sem <- s1/sqrt(length(xech))
t <- (m1-mu0) / sem
sem <- s1/sqrt(length(xech))
t <- (m1-mu0) / sem
pr <- pt(7, lower.tail=FALSE)
pr <- pt(t, lower.tail=FALSE)
pr <- pt(t, 24, lower.tail=FALSE)
cat("Pour un test unilatéral droit:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
sdp <-sd(subpop$CondxVie)
sem <- sdp / 5
z <- (xb-4.7)/sem
pr <- pnorm(z, lower.tail=FALSE)
cat("Pour un test unilatéral droit:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
sep <- sqrt((propA*(1-propA))/400)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
sep <- sqrt((propA*(1-propA))/400)
z <- (propA-0.23)/sep
normal_area(lb=-z, ub=z, acolor="red")
#' From: https://r-coder.com/normal-distribution-r
#'               /#Plot_normal_cumulative_distribution_function_in_R
#' Function normal_area(): draw a normal distribution with shaded area
#'
#' Arguments:
#' mean: mean of the Normal variable
#' sd: standard deviation of the Normal variable
#' lb: lower bound of the area
#' ub: upper bound of the area
#' acolor: color of the area
#' ...: additional arguments to be passed to lines function
#'
#' @example
#' normal_area(mean=100, sd=15, lb=80, ub=125, acolor="red")
#' @export
#'
normal_area <- function(mean = 0, sd = 1, lb, ub, acolor = "lightgray", ...) {
x <- seq(mean - 3 * sd, mean + 3 * sd, length = 100)
if (missing(lb)) {
lb <- min(x)
}
if (missing(ub)) {
ub <- max(x)
}
x2 <- seq(lb, ub, length = 100)
plot(x, dnorm(x, mean, sd), type = "n", ylab = "")
y <- dnorm(x2, mean, sd)
polygon(c(lb, x2, ub), c(0, y, 0), col = acolor)
lines(x, dnorm(x, mean, sd), type = "l", ...)
lines(x,rep(0,length(x)))
}
normal_area(lb=-z, ub=z, acolor="red")
pr <- pnorm(z, lower.tail=FALSE)
z
normal_area(lb=z, ub=-z, acolor="red")
pr <- pnorm(z, lower.tail=FALSE)
z-1.96
z=1.96
pr <- pnorm(z, lower.tail=FALSE)
normal_area(lb=z, ub=-z, acolor="red")
normal_area(lb=-z, ub=z, acolor="red")
pr <- pnorm(z, lower.tail=FALSE)
normal_area(lb=-z, ub=z, acolor="red")
pr <- pnorm(z, lower.tail=FALSE)
pr <- pnorm(z, lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=(1-nc)) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
nc=0.95
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
sep <- sqrt((propA*(1-propA))/400)
z <- (propA-0.23)/sep
pr <- pnorm(z, lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=(1-nc)) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
pr <- pnorm(z, lower.tail=TRUE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=(1-nc)) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
pr <- pnorm(abs(z), lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=(1-nc)) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
pr <- pnorm(abs(z), lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=(1-nc))/2 {print("REJET de H0!")}else{print("Non-Rejet de H0")}
pr <- pnorm(abs(z), lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=((1-nc))/2) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.23,
alternative="two.sided",
conf.level=0.95,
R=100000)
PropA = function(x){p = mean(x == 1)}
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.23,
alternative="two.sided",
conf.level=0.95,
R=100000)
print.boot.one(b.propA)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
PropA = function(x){p = mean(x == 1)}
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.23,
alternative="two.sided",
conf.level=0.95,
R=100000)
print.boot.one(b.propA)
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.19,
alternative="two.sided",
conf.level=0.95,
R=100000)
print.boot.one(b.propA)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
set.seed(150752)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
PropA = function(x){p = mean(x == 1)}
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.20,
alternative="two.sided",
conf.level=0.95,
R=100000)
print.boot.one(b.propA)
set.seed(071552)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
PropA = function(x){p = mean(x == 1)}
library(wBoot)
b.propA = boot.one.per(xech,
PropA,
null.hyp=0.20,
alternative="two.sided",
conf.level=0.95,
R=100000)
print.boot.one(b.propA)
set.seed(071552)
library(data.table)
library(agrmt)
DT <- as.data.table(HaitiPop)     # data.table
subpop = DT[(AGE >= 18)&(DEPARTEMENT =="4")]$PrefPres  # Population ciblée
xech = subpop[sample(1:length(subpop),400,replace=FALSE)]
propA = mean(xech==1)
cat("Proportion des intentions de vote (Candidat A) = ",propA)
sep <- sqrt((propA*(1-propA))/400)
z <- (propA-0.23)/sep
pr <- pnorm(abs(z), lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=((1-nc))/2) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
sep <- sqrt((propA*(1-propA))/400)
z <- (propA-0.20)/sep
pr <- pnorm(abs(z), lower.tail=FALSE)
cat("Pour un test bilatéral:")
cat("p = ",pr)
if(pr<=((1-nc))/2) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
t.test(xech,
alternative="greater",
mu=4.7,
conf.level=0.95)
set.seed(23434334)
subpop = subset(HaitiPop,(DEPARTEMENT==5),CondxVie)
xech = sample(subpop$CondxVie, 25, replace=FALSE)
mu0 = 4.7
xb = mean(xech)
cat("Moyenne = ",xb)
cat("Moyenne    = ", m1 <- mean(xech))
cat("Écart-type = ", s1 <- sd(xech))
sem <- s1/sqrt(length(xech))
t <- (m1-mu0) / sem
pr <- pt(t, 24, lower.tail=FALSE)
cat("Pour un test unilatéral droit:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
t.test(xech,
alternative="greater",
mu=4.7,
conf.level=0.95)
t
res <- t.test(xech,
alternative="greater",
mu=4.7,
conf.level=0.95)
res
summary(res)
# Estimate parameters assuming log-Normal distribution
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "lognormal")
# Estimate parameters assuming log-Normal distribution
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "normal")
res <- fitdistr(x, "normal")
res
summary(res)
res$n
res$loglik
res$vcov
res$estimate
res$sd
hist(xech)
fitdistr(xech,"normal")
sd(xech)
mean(xech)
fitdistr(xech,"chi-squared")
xech
fitdistr(xech,"chi-squared", df=6)
fitdistr(xech,"chi-squared", start=list(df=6))
fitdistr(xech,"chi-squared", start=list(df=6, optimize()))
fitdistr(xech,"chi-squared", start=list(df=6, optimize(interval=c(4,8))))
fitdistr(xech,"chi-squared", start=list(df=6), optimize(interval=c(4,8))))
fitdistr(xech,"chi-squared", start=list(df=6), optimize(interval=c(4,8)))
fitdistr(xech,"t")
fitdistr(xech,"t", , start=list(df=6), optimize(interval=c(16, 24))
)
fitdistr(xech,"t", , start=list(df=6))
fitdistr(xech,"t",df=19 , start=list(df=6))
fitdistr(xech,"t",df=19 , start=list(df=6),s=2)
install.packages("fitdistrplus")
library(fitdistrplus)
fw <- fitdist(groundbeef$serving, "weibull")
fitdistr(xech,"chi-squared")
fitdistr(xech,"normal")
res <- fitdistr(xech,"normal")
plot(res)
mydata <- rnorm(50,8)
fitdistr(mydata, "weibull")
ks.test(mydata, "pnorm", mean=mean(mydata), sd=sd(mydata))
ks.test(mydata, "pweibull", scale=43.2474500, shape=6.4632971)
library(fitdistrplus)
library(logspline)
install.packages("logspline")
library(fitdistrplus)
library(logspline)
x <- c(37.50,46.79,48.30,46.04,43.40,39.25,38.49,49.51,40.38,36.98,40.00,
38.49,37.74,47.92,44.53,44.91,44.91,40.00,41.51,47.92,36.98,43.40,
42.26,41.89,38.87,43.02,39.25,40.38,42.64,36.98,44.15,44.91,43.40,
49.81,38.87,40.00,52.45,53.13,47.92,52.45,44.91,29.54,27.13,35.60,
45.34,43.37,54.15,42.77,42.88,44.26,27.14,39.31,24.80,16.62,30.30,
36.39,28.60,28.53,35.84,31.10,34.55,52.65,48.81,43.42,52.49,38.00,
38.65,34.54,37.70,38.11,43.05,29.95,32.48,24.63,35.33,41.34)
descdist(x, discrete = FALSE)
fit.weibull <- fitdist(x, "weibull")
fit.norm <- fitdist(x, "norm")
plot(fit.norm)
plot(fit.weibull)
n.sims <- 5e4
stats <- replicate(n.sims, {
r <- rweibull(n = length(x)
, shape= fit.weibull$estimate["shape"]
, scale = fit.weibull$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
})
install.packages("gamlss")
install.packages("gamlss")
library(gamlss)
library(gamlss.dist)
library(gamlss.add)
library(gamlss)
library(gamlss.dist)
library(gamlss.add)
install.packages("gamlss.add")
library(gamlss)
library(gamlss.dist)
library(gamlss.add)
x <- c(37.50,46.79,48.30,46.04,43.40,39.25,38.49,49.51,40.38,36.98,40.00,
38.49,37.74,47.92,44.53,44.91,44.91,40.00,41.51,47.92,36.98,43.40,
42.26,41.89,38.87,43.02,39.25,40.38,42.64,36.98,44.15,44.91,43.40,
49.81,38.87,40.00,52.45,53.13,47.92,52.45,44.91,29.54,27.13,35.60,
45.34,43.37,54.15,42.77,42.88,44.26,27.14,39.31,24.80,16.62,30.30,
36.39,28.60,28.53,35.84,31.10,34.55,52.65,48.81,43.42,52.49,38.00,
38.65,34.54,37.70,38.11,43.05,29.95,32.48,24.63,35.33,41.34)
fit <- fitDist(x, k = 2, type = "realplus", trace = FALSE, try.gamlss = TRUE)
summary(fit)
x <- rnorm(1000,50,8)
fit <- fitDist(x, k = 2, type = "realplus", trace = FALSE, try.gamlss = TRUE)
summary(fit)
install.packages("EnvStats")
library(EnvStats)
library(EnvStats)
varTest(xcrim,
alternative="less",
conf.level=0.95,
sigma.squared=500)
subpop = subset(HaitiPop,(AGE>=15)&(DEPARTEMENT=="1"),CRIMIDX)
xcrim = sample(subpop$CRIMIDX,100,replace=FALSE)
xb = mean(xcrim)
vcrim = var(xcrim)
cat("Moyenne  = ",xb)
cat("Variance = ",vcrim)
var0 = 500    # Variance de la population sous H0
chi <- (99*vcrim)/500
pr <- pchisq(chi, 99, lower.tail=FALSE)
cat("Pour un test unilatéral droit:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
library(EnvStats)
varTest(xcrim,
alternative="less",
conf.level=0.95,
sigma.squared=500)
pr <- pchisq(chi, 99, lower.tail=FALSE)
cat("Pour un test unilatéral droit:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
pr <- pchisq(chi, 99, lower.tail=TRUE)
cat("Pour un test unilatéral gauche:")
cat("p = ", pr)
if(pr <= 0.05) {print("REJET de H0!")}else{print("Non-Rejet de H0")}
x <- propA = sum(xech==1)
x <- sum(xech==1)
n <- length(xech)
p <- 0.20
prop.test(x, n, p)
x <- sum(xech==1)
n <- length(xech)
p <- 0.20
prop.test(x, n, p, alternative = "two.tailed")
x <- sum(xech==1)
n <- length(xech)
p <- 0.20
prop.test(x, n, p, alternative = "two.sided")
setwd("I:/MAT104/isteahMAT104")
library(debtools)
library(devtools)
document()
library(graphics)
library(isteahMAT104)
install_github("dco61/isteahMAT104")
t_area(12,-1, 1.5)
document()
document()
install_github("dco61/isteahMAT104")
unload="isteahMAT104"
install_github("dco61/isteahMAT104")
